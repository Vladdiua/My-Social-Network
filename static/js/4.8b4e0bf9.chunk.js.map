{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["Element","input","meta","props","hasError","touched","error","className","classes","formControl","Textarea","Input","createField","placeholder","name","type","validators","component","validate","module","exports","required","value","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","profile","handleSubmit","onMainPhotoSelected","onSubmit","keys","contacts","map","key","ProfileData","goToEditMode","isOwner","edit","onClick","alt","src","process","lookingForAJobDescription","aboutMe","social","contactTitle","contactValue","Contacts","insta","target","rel","href","ProfileInfo","savePhoto","saveProfile","profileBack","avatar","photos","large","discription","fullName","initialValues","formData","then","files","Post","post","postAvatar","postText","message","postLikes","deletePost","likes","maxLength10","AddNewPostForm","newPost","Field","buttonBox","MyPosts","React","memo","postsElements","posts","reverse","id","addPost","newPostElement","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","Profile","ProfileContainer","refreshProfile","userId","match","params","authUserId","history","getProfile","getStatus","this","prevProps","prevState","snapshot","Component","compose","auth","isAuth","setUsersProfile","withRouter"],"mappings":"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","file":"static/js/4.8b4e0bf9.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\n\n\nconst Element = Element => ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\n            <Element {...input} {...props} />\n            {hasError && <span> {meta.error} </span>}\n        </div>\n    );\n};\nexport const Textarea = Element(\"textarea\");\nexport const Input = Element(\"input\");\n\nexport const createField = (placeholder, name,type, validators, component) => {\n    return (\n        <Field\n            placeholder={placeholder}\n            name={name}\n            type={type}\n            component={validators}\n            validate={component}\n\n        />\n    )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\"};","export const required = value => {\n\n    if (value) return undefined\n\n    return 'field is required!';\n\n}\n\n\n\nexport const  maxLength = (maxLength) =>  (value) => {\n\n    if (value && value.length > maxLength)  return `Max length is ${maxLength} symbols`\n\n        return undefined;\n\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBack\":\"ProfileInfo_profileBack__37wFJ\",\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"discription\":\"ProfileInfo_discription__3VcB3\",\"social\":\"ProfileInfo_social__1Pg9N\",\"edit\":\"ProfileInfo_edit__2z_eo\",\"error\":\"ProfileInfo_error__rRsoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBack\":\"MyPosts_profileBack__2s1-p\",\"avatar\":\"MyPosts_avatar__2_H7d\",\"discription\":\"MyPosts_discription__bzThk\",\"buttonBox\":\"MyPosts_buttonBox__3yRFU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"postAvatar\":\"Post_postAvatar__XmWda\",\"postText\":\"Post_postText__1lIib\",\"postLikes\":\"Post_postLikes__2iOAq\",\"deletePost\":\"Post_deletePost__39Dzg\"};","import React, {useEffect, useState} from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status]\n)\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n\n    return (\n        <>\n            {!editMode &&\n            <p onDoubleClick={activateEditMode}>{props.status || \"_\"}</p>\n            }\n            {editMode &&\n            <input\n                onChange={onStatusChange}\n                onBlur={deactivateEditMode}\n                autoFocus={true}\n                value={status}\n            />\n            }\n        </>\n    )\n}\n\nexport default ProfileStatusWithHooks","import React from \"react\"\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {reduxForm} from \"redux-form\";\nimport classes from \"./ProfileInfo.module.css\"\n\n\nconst ProfileDataForm = ({profile, handleSubmit, onMainPhotoSelected, error}) => {\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit you'r info</h3>\n        <b>Main Photo:</b>\n        <div>\n            <input type={\"file\"} onChange={onMainPhotoSelected}/>\n        </div>\n        <p>Full Name:</p>\n        {createField('Full Name', 'fullName', 'text', Input, [])}\n        <p>looking For A Job:</p>\n        {createField('lookingForAJob', 'lookingForAJob', 'checkbox', Input, [])}\n        <p>My Professional Skills:</p>\n        {createField('My Professional Skills', 'lookingForAJobDescription', 'text', Textarea, [])}\n        <p>About Me:</p>\n        {createField('About Me', 'aboutMe', 'text', Textarea, [])}\n        <p>Contacts:</p>\n        {Object.keys(profile.contacts).map(key => {\n            return <div key={key}>\n                {/* todo: create some solution for embedded objects */}\n                <p>{key}:</p> {createField(key, \"contacts.\" + key, 'text', Input, [])}\n            </div>\n        })}\n        <button>Save</button>\n        {error && <div className={classes.error}><p>{error}</p></div>}\n    </form>\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\n\nexport default ProfileDataFormReduxForm\n\n","import React, {useState} from \"react\";\nimport classes from \"./ProfileInfo.module.css\"\nimport Preloader from \"../../common/preloader/preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({isOwner, profile, status, updateStatus, savePhoto, saveProfile}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0])\n        }\n    }\n\n    const onSubmit =  (formData) => {\n         saveProfile(formData).then(() => {\n            setEditMode(false)\n        })\n    }\n\n    return (\n        <div>\n            <div className={classes.profileBack}>\n                <img alt=\"profileBack\" src={process.env.PUBLIC_URL + \"/assets/img/back.jpg\"}/>\n            </div>\n            <div>\n                <div className={classes.avatar}>\n                    <img alt=\"avatar\"\n                         src={profile.photos.large != null ? profile.photos.large : process.env.PUBLIC_URL + \"/assets/img/avatars/default_user.png\"}/>\n                </div>\n                <div className={classes.discription}>\n                    <h3>{profile.fullName}</h3>\n                    <ProfileStatusWithHooks isOwner={isOwner} status={status} updateStatus={updateStatus}/>\n                    <div>\n                    </div>\n                    {editMode\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}\n                                           onMainPhotoSelected={onMainPhotoSelected}/>\n                        : <ProfileData profile={profile}\n                                       isOwner={isOwner}\n                                       goToEditMode={() => {\n                                           setEditMode(true)\n                                       }}\n\n                        />}\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nconst ProfileData = ({profile, goToEditMode, isOwner}) => {\n    return (\n        <>\n            {isOwner && <span className={classes.edit} onClick={goToEditMode}>\n                <img alt=\"Settings\"\n                     src={process.env.PUBLIC_URL + \"/assets/img/icons/settings.png\"}/></span>}\n            <div>\n                <p>{profile.lookingForAJobDescription}</p>\n\n                <p>{profile.aboutMe}</p>\n                <div className={classes.social}>\n                    {Object.keys(profile.contacts).map(key => {\n                        if (profile.contacts[key])\n                        return (\n                            <Contacts contactTitle={key} contactValue={profile.contacts[key]}/>\n                            )\n                    })}\n                </div>\n            </div>\n        </>\n    )\n}\n\n\nconst Contacts = ({contactTitle, contactValue}) => {\n    return (\n                <a className={classes.insta} target=\"_blank\" rel=\"noopener noreferrer\" href={contactValue}><img alt={'icon'} src={process.env.PUBLIC_URL + `/assets/img/${contactTitle}.png`}/></a>\n\n    )\n}\n\nexport default ProfileInfo","import React from \"react\";\nimport classes from \"./Post.module.css\"\n\nconst Post = (props) => {\n    return (\n\n                <div className={classes.post}>\n                    <div className={classes.postAvatar}>\n                        <img alt=\"postAvatar\" src={process.env.PUBLIC_URL + \"/assets/img/avatar.jpg\"}/>\n                    </div>\n                    <div className={classes.postText}>\n                        <p>{props.message}</p>\n                    </div>\n                    <div className={classes.postLikes}>\n                        <button className={classes.deletePost} onClick={props.deletePost}>×</button>\n                        <img alt=\"postLikes\" src={process.env.PUBLIC_URL + \"/assets/img/like.png\"}/>\n                        <div><span>{props.likes}</span></div>\n\n                    </div>\n                </div>\n\n\n)\n}\n\nexport default Post","import React from \"react\";\nimport classes from \"./MyPosts.module.css\"\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLength, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nlet maxLength10 = maxLength(10);\n\nlet AddNewPostForm = (props) => {\n    return (\n        <form className={classes.newPost} onSubmit={props.handleSubmit}>\n            <Field\n                component={Textarea}\n                name={'newPostElement'}\n                placeholder=\"Make a new great post!\"\n                validate={[required,maxLength10]}\n            />\n            <div className={classes.buttonBox}>\n                <button>Add Post</button>\n            </div>\n        </form>\n    )\n}\n\nAddNewPostForm = reduxForm({form:'ProfileAddNewPostForm'})(AddNewPostForm)\n\n\nconst MyPosts = React.memo( props => {\n    let postsElements =\n        [...props.posts]\n            .reverse()\n            .map(post => <Post likes={post.likes}\n                               key={post.id}\n                               message={post.message}\n                               deletePost={post.deletePost}\n            />)\n\n    let onAddPost = (value) => {\n        props.addPost(value.newPostElement)\n    }\n\n    return (\n        <div className={classes.posts}>\n            <div>\n                <h4>My posts</h4>\n            </div>\n            <AddNewPostForm onSubmit={onAddPost}/>\n            {postsElements}\n        </div>\n\n\n    )\n}\n)\n\n\nexport default MyPosts","import {addPost, deletePost} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\n\n\nlet mapStateToProps = (state) => {\n    return{\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost:(newPostText) => dispatch(addPost(newPostText)),\n        deletePost: deletePost()\n    }\n}\n\n\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n\n\n\n    return (\n        <div>\n            <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer profile={props.profile} />\n        </div>\n    )\n}\n\nexport default Profile","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {\n    getProfile,\n    getStatus,\n    savePhoto,\n    saveProfile,\n    setUsersProfile,\n    updateStatus\n} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile = () => {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authUserId\n            if (!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     isOwner={!this.props.match.params.userId}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}\n            />\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {setUsersProfile, getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileContainer)\n"],"sourceRoot":""}