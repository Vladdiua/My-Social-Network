{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","hoc/AuthRedirect.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["Element","input","meta","props","hasError","touched","error","className","classes","formControl","Textarea","Input","createField","placeholder","name","type","validators","component","validate","module","exports","required","value","maxLength","length","mapStateToPropsRedirect","state","isAuth","auth","AuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","dialog","id","activeClassName","active","alt","src","process","avaLink","Message","message","maxLength101","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","dialogsElements","dialogs","map","key","messagesElements","messages","sendMessage","newMessageBody","compose","dispatch"],"mappings":"0RAKMA,EAAU,SAAAA,GAAO,OAAI,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAC9CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWC,IAAQC,YAAc,KAAOL,EAAWI,IAAQF,MAAQ,KACpE,kBAAC,EAAD,iBAAaL,EAAWE,IACvBC,GAAY,kCAAQF,EAAKI,MAAb,QAIZI,EAAWV,EAAQ,YACnBW,EAAQX,EAAQ,SAEhBY,EAAc,SAACC,EAAaC,EAAKC,EAAMC,EAAYC,GAC5D,OACI,kBAAC,IAAD,CACIJ,YAAaA,EACbC,KAAMA,EACNC,KAAMA,EACNE,UAAWD,EACXE,SAAUD,M,oBCvBtBE,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,iCCD3E,oEAAO,IAAMC,EAAW,SAAAC,GAEpB,IAAIA,EAEJ,MAAO,sBAMGC,EAAY,SAACA,GAAD,OAAgB,SAACD,GAEvC,GAAIA,GAASA,EAAME,OAASD,EAAY,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCX5CJ,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sICGlKK,EAA0B,SAACC,GAC3B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAe,SAACC,GAAe,IAElCC,EAFiC,uKAI/B,OAAKC,KAAK7B,MAAMwB,OAET,kBAACG,EAAcE,KAAK7B,OAFI,kBAAC,IAAD,CAAU8B,GAAI,eAJd,GAEPC,IAAMJ,WAUtC,OAFqCK,YAAQV,EAARU,CAAiCJ,K,6FCN3DK,EAVI,SAACjC,GAChB,OACI,yBAAKI,UAAWC,IAAQ6B,QACpB,kBAAC,IAAD,CAASJ,GAAI,YAAc9B,EAAMmC,GAAIC,gBAAiB/B,IAAQgC,QAC1D,yBAAKC,IAAKtC,EAAMW,KAAM4B,IAAKC,qBAAyBxC,EAAMyC,UAC1D,2BAAIzC,EAAMW,SCAX+B,EALC,SAAC1C,GACb,OACI,yBAAKI,UAAWC,IAAQsC,SAAS,8BAAO3C,EAAM2C,W,oCCGlDC,EAAexB,YAAU,KAgBvByB,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,EAdL,SAAC9C,GACpB,OACI,0BAAMgD,SAAUhD,EAAMiD,cAClB,kBAACC,EAAA,EAAD,CACIpC,UAAWP,IACXI,KAAM,iBACND,YAAY,qBACZK,SAAU,CAACG,IAAS0B,KAExB,4CAoCGO,EA7BC,SAACnD,GAEb,IAAIuB,EAAQvB,EAAMoD,YAEdC,EAAmB9B,EAAM+B,QAAQC,KAAK,SAAArB,GAAM,OAAI,kBAAC,EAAD,CAAYvB,KAAMuB,EAAOvB,KAAM6C,IAAKtB,EAAOC,GAAIA,GAAID,EAAOC,GAAIM,QAASP,EAAOO,aAC9HgB,EAAoBlC,EAAMmC,SAASH,KAAK,SAAAZ,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAASa,IAAKb,EAAQR,GAAIA,GAAIQ,EAAQR,QAMvH,OACI,6BACI,uCACA,yBAAK/B,UAAWC,IAAQiD,SACpB,6BACKD,GAEL,yBAAKjD,UAAWC,IAAQqD,UACnBD,EACD,kBAACZ,EAAD,CAAqBG,SAbjB,SAAC7B,GACjBnB,EAAM2D,YAAYxC,EAAMyC,uB,yBChBjBC,sBACX7B,aAbkB,SAACT,GACnB,MAAM,CACF6B,YAAa7B,EAAM6B,gBAIF,SAACU,GACtB,MAAO,CACHH,YAAY,SAACC,GAAD,OAAoBE,EAASH,YAAYC,SAMzDlC,IAFWmC,CAGbV","file":"static/js/6.9f304fac.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\n\n\nconst Element = Element => ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\n            <Element {...input} {...props} />\n            {hasError && <span> {meta.error} </span>}\n        </div>\n    );\n};\nexport const Textarea = Element(\"textarea\");\nexport const Input = Element(\"input\");\n\nexport const createField = (placeholder, name,type, validators, component) => {\n    return (\n        <Field\n            placeholder={placeholder}\n            name={name}\n            type={type}\n            component={validators}\n            validate={component}\n        />\n    )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\"};","export const required = value => {\n\n    if (value) return undefined\n\n    return 'field is required!';\n\n}\n\n\n\nexport const  maxLength = (maxLength) =>  (value) => {\n\n    if (value && value.length > maxLength)  return `Max length is ${maxLength} symbols`\n\n        return undefined;\n\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const AuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent\n}","import React from \"react\";\nimport classes from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    return (\n        <div className={classes.dialog}>\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={classes.active}>\n                <img alt={props.name} src={process.env.PUBLIC_URL + props.avaLink} />\n                <p>{props.name}</p>\n            </NavLink>\n        </div>\n    )\n}\nexport default DialogItem","import React from \"react\";\nimport classes from './../Dialogs.module.css'\n\n\nconst Message = (props) => {\n    return (\n        <div className={classes.message}><span>{props.message}</span></div>\n    )\n}\nexport default Message","import React from \"react\";\nimport classes from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLength, required} from \"../../utils/validators/validators\";\n\n\nlet maxLength101 = maxLength(101);\n\nconst AddMessageForm = (props) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                component={Textarea}\n                name={'newMessageBody'}\n                placeholder=\"Enter your message\"\n                validate={[required,maxLength101]}\n            />\n            <button>Send</button>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements =  state.dialogs.map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} avaLink={dialog.avaLink}/> )\n    let messagesElements =  state.messages.map( message => <Message message={message.message} key={message.id} id={message.id}/> )\n\n    let addNewMessage = (value) => {\n        props.sendMessage(value.newMessageBody);\n    }\n\n    return (\n        <div>\n            <h3>Dialogs</h3>\n            <div className={classes.dialogs}>\n                <div>\n                    {dialogsElements}\n                </div>\n                <div className={classes.messages}>\n                    {messagesElements}\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Dialogs","import {sendMessage} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return{\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage:(newMessageBody) => dispatch(sendMessage(newMessageBody))\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps,mapDispatchToProps),\n    AuthRedirect\n)(Dialogs)"],"sourceRoot":""}