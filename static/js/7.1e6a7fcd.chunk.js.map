{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Login/Login.module.css","components/Login/Login.js"],"names":["Element","input","meta","props","hasError","touched","error","className","classes","formControl","Textarea","Input","createField","placeholder","name","type","validators","component","validate","module","exports","required","value","maxLength","length","LoginRedaxForm","reduxForm","form","handleSubmit","loginForm","onSubmit","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"0RAKMA,EAAU,SAAAA,GAAO,OAAI,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAC9CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWC,IAAQC,YAAc,KAAOL,EAAWI,IAAQF,MAAQ,KACpE,kBAAC,EAAD,iBAAaL,EAAWE,IACvBC,GAAY,kCAAQF,EAAKI,MAAb,QAIZI,EAAWV,EAAQ,YACnBW,EAAQX,EAAQ,SAEhBY,EAAc,SAACC,EAAaC,EAAKC,EAAMC,EAAYC,GAC5D,OACI,kBAAC,IAAD,CACIJ,YAAaA,EACbC,KAAMA,EACNC,KAAMA,EACNE,UAAWD,EACXE,SAAUD,M,oBCvBtBE,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,iCCD3E,oEAAO,IAAMC,EAAW,SAAAC,GAEpB,IAAIA,EAEJ,MAAO,sBAMGC,EAAY,SAACA,GAAD,OAAgB,SAACD,GAEvC,GAAIA,GAASA,EAAME,OAASD,EAAY,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCX5CJ,EAAOC,QAAU,CAAC,UAAY,2B,iCCD9B,+FAyBMK,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EAfL,SAAC,GAA0B,IAAzBE,EAAwB,EAAxBA,aAAatB,EAAW,EAAXA,MAC7B,OACI,0BAAMC,UAAWC,IAAQqB,UAAWC,SAAUF,GACzCtB,GAAS,6BAAK,2BAAIA,IAClBM,YAAY,QAAQ,QAAQ,OAAOD,IAAM,CAACU,MAC1CT,YAAY,WAAW,WAAW,WAAWD,IAAM,CAACU,MACpDT,YAAY,GAAG,aAAa,WAAWD,KACxC,6CACA,6BACI,8CA+BDoB,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGgB,CAACE,WAAzBJ,EApBD,SAAC5B,GAKX,OAAIA,EAAM8B,OACC,kBAAC,IAAD,CAAUG,GAAI,aAIrB,6BACI,qCACA,kBAACX,EAAD,CAAgBK,SAXN,SAACO,GACflC,EAAMgC,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.1e6a7fcd.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from './FormsControls.module.css'\nimport {Field} from \"redux-form\";\n\n\nconst Element = Element => ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\n            <Element {...input} {...props} />\n            {hasError && <span> {meta.error} </span>}\n        </div>\n    );\n};\nexport const Textarea = Element(\"textarea\");\nexport const Input = Element(\"input\");\n\nexport const createField = (placeholder, name,type, validators, component) => {\n    return (\n        <Field\n            placeholder={placeholder}\n            name={name}\n            type={type}\n            component={validators}\n            validate={component}\n        />\n    )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\"};","export const required = value => {\n\n    if (value) return undefined\n\n    return 'field is required!';\n\n}\n\n\n\nexport const  maxLength = (maxLength) =>  (value) => {\n\n    if (value && value.length > maxLength)  return `Max length is ${maxLength} symbols`\n\n        return undefined;\n\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__1Hg13\"};","import React from \"react\";\nimport classes from \"./Login.module.css\"\nimport {reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\n\nconst LoginForm = ({handleSubmit,error}) => {\n    return (\n        <form className={classes.loginForm} onSubmit={handleSubmit}>\n            {error && <div><p>{error}</p></div>}\n            {createField('Email','email','text',Input,[required])}\n            {createField('Password','password','password',Input,[required])}\n            {createField('','rememberMe','checkbox',Input)}\n            <span>Remember me</span>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginRedaxForm = reduxForm({\n    form: 'login'\n})\n(LoginForm)\n\nconst Login = (props) => {\n    const  onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginRedaxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\nconst MapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(MapStateToProps,{login})(Login)"],"sourceRoot":""}